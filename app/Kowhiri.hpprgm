EXPORT KOWHIRI()
BEGIN
 LOCAL i;
 REPEAT
  CHOOSE(i,"Kowhiri","Algebra","Calculus","Linear Systems","Conversions","Quit");
  IF i==1 THEN ALGEBRA_MENU(); END;
  IF i==2 THEN CALC_MENU(); END;
  IF i==3 THEN LINEAR_MENU(); END;
  IF i==4 THEN CONVERT_MENU(); END;
 UNTIL i==5 OR i==0;
END;

EXPORT ALGEBRA_MENU()
BEGIN LOCAL k;
 CHOOSE(k,"Algebra","Quadratic solver + steps","Back");
 IF k==1 THEN QUAD_SOLVE_STEPS(); END;
END;

EXPORT CALC_MENU()
BEGIN LOCAL k;
 CHOOSE(k,"Calculus","Differentiate a*x^n","Integrate x^n","Back");
 IF k==1 THEN DIFF_POWER(); END;
 IF k==2 THEN INTEG_POWER(); END;
END;

EXPORT LINEAR_MENU()
BEGIN LOCAL k;
 CHOOSE(k,"Linear systems","Solve 2x2","Solve 3x3","Back");
 IF k==1 THEN SOLVE_2x2(); END;
 IF k==2 THEN SOLVE_3x3(); END;
END;

EXPORT CONVERT_MENU()
BEGIN LOCAL k;
 CHOOSE(k,"Conversions","Length","Mass","Time","Temperature","Area","Volume","Speed","Energy","Power","Pressure","Back");
 IF k==1 THEN CONVERT_LENGTH(); END;
 IF k==2 THEN CONVERT_MASS(); END;
 IF k==3 THEN CONVERT_TIME(); END;
 IF k==4 THEN CONVERT_TEMP(); END;
 IF k==5 THEN CONVERT_AREA(); END;
 IF k==6 THEN CONVERT_VOL(); END;
 IF k==7 THEN CONVERT_SPEED(); END;
 IF k==8 THEN CONVERT_ENERGY(); END;
 IF k==9 THEN CONVERT_POWER(); END;
 IF k==10 THEN CONVERT_PRESS(); END;
END;

EXPORT STEPS_VIEW(lines)
BEGIN
 LOCAL n:=SIZE(lines), pg:=1, per:=10, i, any;
 REPEAT
  RECT();
  TEXTOUT_P("Steps "+STRING(pg),2,2,2);
  FOR i FROM 1 TO per DO
   IF (i+(pg-1)*per)<=n THEN TEXTOUT_P(lines(i+(pg-1)*per),2,18+i*18,1); END;
  END;
  any:=WAIT(-1);
  IF (pg*per)<n THEN pg:=pg+1; ELSE BREAK; END;
 UNTIL 0;
END;

EXPORT QUAD_SOLVE_STEPS()
BEGIN
 LOCAL a,b,c,D,r1,r2,steps:={};
 INPUT({a,b,c},"Quadratic","Enter a,b,c",{"a","b","c"},{1,0,0});
 IF a==0 THEN MSGBOX("a must not be 0"); RETURN; END;
 D:=b*b-4*a*c;
 steps:=CONCAT(steps,{"x=(-b±√(b^2-4ac))/(2a)","a="+STRING(a)+", b="+STRING(b)+", c="+STRING(c)});
 steps:=CONCAT(steps,{"D=b^2-4ac="+STRING(D)});
 IF D>=0 THEN
  r1:=(-b+√(D))/(2*a); r2:=(-b-√(D))/(2*a);
  steps:=CONCAT(steps,{"√D="+STRING(√(D)),"x1="+STRING(r1),"x2="+STRING(r2)});
  STEPS_VIEW(steps); MSGBOX("x1="+STRING(r1)+", x2="+STRING(r2));
 ELSE
  LOCAL re,im; re:=(-b)/(2*a); im:=√(-D)/(2*a);
  steps:=CONCAT(steps,{"D<0 → complex","x="+STRING(re)+" ± "+STRING(im)+"·i"});
  STEPS_VIEW(steps); MSGBOX("x="+STRING(re)+" ± "+STRING(im)+"·i");
 END;
END;

EXPORT DIFF_POWER()
BEGIN
 LOCAL a,n,steps:={};
 INPUT({a,n},"Differentiate a·x^n","Enter a,n",{"a","n"},{1,1});
 steps:=CONCAT(steps,{"Rule d/dx x^n = n·x^(n-1)","d/dx a·g = a·g'","f'(x)=a·n·x^(n-1)"});
 STEPS_VIEW(steps);
END;

EXPORT INTEG_POWER()
BEGIN
 LOCAL n,steps:={};
 INPUT({n},"Integrate x^n","n",{"n"},{1});
 IF n==-1 THEN
  steps:={"∫x^-1 dx = ln|x| + C"};
 ELSE
  steps:={"∫x^n dx = x^(n+1)/(n+1) + C, n≠-1"};
 END;
 STEPS_VIEW(steps);
END;

EXPORT SOLVE_2x2()
BEGIN
 LOCAL a,b,c,d,e,f,A,B,sol,steps:={};
 INPUT({a,b,c,d,e,f},"2x2","a·x+b·y=c; d·x+e·y=f",{"a","b","c","d","e","f"},{1,1,0,0,1,0});
 A:=[[a,b],[d,e]]; B:=[[c],[f]];
 sol:=RREF(Augment(A,B));
 steps:={"Solve A·v=B with RREF"};
 STEPS_VIEW(steps);
 MSGBOX("x="+STRING(sol(1,3))+", y="+STRING(sol(2,3)));
END;

EXPORT SOLVE_3x3()
BEGIN
 LOCAL a,b,c,d,e,f,g,h,i,j,k,l,A,B,sol,steps:={};
 INPUT({a,b,c,d,e,f,g,h,i,j,k,l},"3x3","a·x+b·y+c·z=d; e·x+f·y+g·z=h; i·x+j·y+k·z=l",{"a","b","c","d","e","f","g","h","i","j","k","l"},{1,0,0,0,0,1,0,0,0,0,1,0});
 A:=[[a,b,c],[e,f,g],[i,j,k]]; B:=[[d],[h],[l]];
 sol:=RREF(Augment(A,B));
 steps:={"Solve A·v=B with RREF"};
 STEPS_VIEW(steps);
 MSGBOX("x="+STRING(sol(1,4))+", y="+STRING(sol(2,4))+", z="+STRING(sol(3,4)));
END;

EXPORT CONVERT_LENGTH() BEGIN _CONV_SIMPLE({"m","km","cm","mm"}, {"m","km","cm","mm"}, "Length", @LEN_CONV); END;
EXPORT CONVERT_MASS()   BEGIN _CONV_SIMPLE({"kg","g","mg","t"}, {"kg","g","mg","t"}, "Mass", @MASS_CONV); END;
EXPORT CONVERT_TIME()   BEGIN _CONV_SIMPLE({"s","min","h"}, {"s","min","h"}, "Time", @TIME_CONV); END;
EXPORT CONVERT_TEMP()   BEGIN _CONV_SIMPLE({"C","K","F"}, {"C","K","F"}, "Temperature", @TEMP_CONV); END;
EXPORT CONVERT_AREA()   BEGIN _CONV_SIMPLE({"m^2","cm^2","mm^2","km^2"}, {"m^2","cm^2","mm^2","km^2"}, "Area", @AREA_CONV); END;
EXPORT CONVERT_VOL()    BEGIN _CONV_SIMPLE({"m^3","L","mL"}, {"m^3","L","mL"}, "Volume", @VOL_CONV); END;
EXPORT CONVERT_SPEED()  BEGIN _CONV_SIMPLE({"m/s","km/h"}, {"m/s","km/h"}, "Speed", @SPEED_CONV); END;
EXPORT CONVERT_ENERGY() BEGIN _CONV_SIMPLE({"J","kJ","MJ","Wh","kWh"}, {"J","kJ","MJ","Wh","kWh"}, "Energy", @ENERGY_CONV); END;
EXPORT CONVERT_POWER()  BEGIN _CONV_SIMPLE({"W","kW","MW"}, {"W","kW","MW"}, "Power", @POWER_CONV); END;
EXPORT CONVERT_PRESS()  BEGIN _CONV_SIMPLE({"Pa","kPa","MPa","bar"}, {"Pa","kPa","MPa","bar"}, "Pressure", @PRESS_CONV); END;

EXPORT _CONV_SIMPLE(fromU,toU,title,fptr)
BEGIN
 LOCAL kf,kt,from,to,val,res;
 CHOOSE(kf,"From "+title,fromU); IF kf==0 THEN RETURN; END; from:=fromU(kf);
 CHOOSE(kt,"To "+title,toU);     IF kt==0 THEN RETURN; END; to:=toU(kt);
 INPUT({val},"Value","Enter value",{"value"},{1});
 res:=fptr(val,from,to);
 MSGBOX(STRING(val)+" "+from+" = "+STRING(res)+" "+to);
END;

EXPORT LEN_CONV(x,f,t) BEGIN LOCAL m; IF f=="m" THEN m:=x; IF f=="km" THEN m:=x*1000; IF f=="cm" THEN m:=x/100; IF f=="mm" THEN m:=x/1000; END; IF t=="m" THEN RETURN m; IF t=="km" THEN RETURN m/1000; IF t=="cm" THEN RETURN m*100; IF t=="mm" THEN RETURN m*1000; RETURN m; END;
EXPORT MASS_CONV(x,f,t) BEGIN LOCAL kg; IF f=="kg" THEN kg:=x; IF f=="g" THEN kg:=x/1000; IF f=="mg" THEN kg:=x/1000000; IF f=="t" THEN kg:=x*1000; END; IF t=="kg" THEN RETURN kg; IF t=="g" THEN RETURN kg*1000; IF t=="mg" THEN RETURN kg*1000000; IF t=="t" THEN RETURN kg/1000; RETURN kg; END;
EXPORT TIME_CONV(x,f,t) BEGIN LOCAL s; IF f=="s" THEN s:=x; IF f=="min" THEN s:=x*60; IF f=="h" THEN s:=x*3600; END; IF t=="s" THEN RETURN s; IF t=="min" THEN RETURN s/60; IF t=="h" THEN RETURN s/3600; RETURN s; END;
EXPORT TEMP_CONV(x,f,t) BEGIN LOCAL C; IF f=="C" THEN C:=x; IF f=="K" THEN C:=x-273.15; IF f=="F" THEN C:=(x-32)*5/9; END; IF t=="C" THEN RETURN C; IF t=="K" THEN RETURN C+273.15; IF t=="F" THEN RETURN C*9/5+32; RETURN C; END;
EXPORT AREA_CONV(x,f,t) BEGIN LOCAL m2; IF f=="m^2" THEN m2:=x; IF f=="cm^2" THEN m2:=x/10000; IF f=="mm^2" THEN m2:=x/1000000; IF f=="km^2" THEN m2:=x*1000000; END; IF t=="m^2" THEN RETURN m2; IF t=="cm^2" THEN RETURN m2*10000; IF t=="mm^2" THEN RETURN m2*1000000; IF t=="km^2" THEN RETURN m2/1000000; RETURN m2; END;
EXPORT VOL_CONV(x,f,t) BEGIN LOCAL m3; IF f=="m^3" THEN m3:=x; IF f=="L" THEN m3:=x/1000; IF f=="mL" THEN m3:=x/1000000; END; IF t=="m^3" THEN RETURN m3; IF t=="L" THEN RETURN m3*1000; IF t=="mL" THEN RETURN m3*1000000; RETURN m3; END;
EXPORT SPEED_CONV(x,f,t) BEGIN LOCAL ms; IF f=="m/s" THEN ms:=x; IF f=="km/h" THEN ms:=x/3.6; END; IF t=="m/s" THEN RETURN ms; IF t=="km/h" THEN RETURN ms*3.6; RETURN ms; END;
EXPORT ENERGY_CONV(x,f,t) BEGIN LOCAL J; IF f=="J" THEN J:=x; IF f=="kJ" THEN J:=x*1000; IF f=="MJ" THEN J:=x*1000000; IF f=="Wh" THEN J:=x*3600; IF f=="kWh" THEN J:=x*3600000; END; IF t=="J" THEN RETURN J; IF t=="kJ" THEN RETURN J/1000; IF t=="MJ" THEN RETURN J/1000000; IF t=="Wh" THEN RETURN J/3600; IF t=="kWh" THEN RETURN J/3600000; RETURN J; END;
EXPORT POWER_CONV(x,f,t) BEGIN LOCAL W; IF f=="W" THEN W:=x; IF f=="kW" THEN W:=x*1000; IF f=="MW" THEN W:=x*1000000; END; IF t=="W" THEN RETURN W; IF t=="kW" THEN RETURN W/1000; IF t=="MW" THEN RETURN W/1000000; RETURN W; END;
EXPORT PRESS_CONV(x,f,t) BEGIN LOCAL Pa; IF f=="Pa" THEN Pa:=x; IF f=="kPa" THEN Pa:=x*1000; IF f=="MPa" THEN Pa:=x*1000000; IF f=="bar" THEN Pa:=x*100000; END; IF t=="Pa" THEN RETURN Pa; IF t=="kPa" THEN RETURN Pa/1000; IF t=="MPa" THEN RETURN Pa/1000000; IF t=="bar" THEN RETURN Pa/100000; RETURN Pa; END;